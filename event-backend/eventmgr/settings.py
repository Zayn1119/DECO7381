"""
Django settings for eventmgr project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

# eventmgr/settings.py
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'django-insecure-!ebkx9o=^^^omvswcr$4v*uali69#*7jd5tf2qj&*i23g8dhv&'
DEBUG = True
ALLOWED_HOSTS = ["*"]

INSTALLED_APPS = [
    # 第三方放前面无所谓，但 corsheaders 需要安装：pip install django-cors-headers
    'corsheaders',

    # Django 内置
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # DRF & API 文档
    'rest_framework',
    'drf_spectacular',

    # 业务
    'conference',
    'tradeshow',
]

MIDDLEWARE = [
    # 必须在 CommonMiddleware 之前
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',   # 保留，对 DRF 无影响（见下方 REST 配置）
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'eventmgr.urls'

TEMPLATES = [{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [],
    'APP_DIRS': True,
    'OPTIONS': {'context_processors': [
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
    ]},
}]

WSGI_APPLICATION = 'eventmgr.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

STATIC_URL = 'static/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ============== DRF ==============
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    # 开发期放开权限
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.AllowAny"],
    # 关闭 Session 认证以避免 CSRF；如需 Basic/JWT 可自行开启
    "DEFAULT_AUTHENTICATION_CLASSES": [],
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Event API",
    "VERSION": "1.0.0",
}

# ============== CORS / CSRF（开发期）===============
# 你不改 vite.config 时，前端会从 5500（或 5173）直连 8000，这里放行跨域
CORS_ALLOW_ALL_ORIGINS = True              # 仅开发期；线上请改为 CORS_ALLOWED_ORIGINS 精确白名单
CORS_ALLOW_CREDENTIALS = True              # 如果以后用 cookie，可保留；不用也无碍

# 防止浏览器因 CSRF 拦截预检/表单，这里信任本地前端源
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5500", "http://127.0.0.1:5500",
    "http://localhost:5173", "http://127.0.0.1:5173",
]


